version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      # Development settings
      NODE_ENV: development
      BASE_URL: http://localhost:3000
      IS_DOCKER: "true"
      
      # Database connection (using Docker networking)
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-revelate}
      DB_USER: ${POSTGRES_USER:-user}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      DB_SSL: "false"
      
      # Development-specific settings
      NEXT_TELEMETRY_DISABLED: 1
      WATCHPACK_POLLING: "true"  # Enable file watching in Docker
    command: npm run dev
    depends_on:
      db:
        condition: service_healthy
  
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-revelate}
    volumes:
      - db_data_dev:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-revelate}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  db_data_dev:
    driver: local
